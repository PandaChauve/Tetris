function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}function Tetris(a,b,c){"use strict";this.grid=new Grid(a),this.stats=c,this.score=0,this.cursor=[],void 0===b&&(b=1);for(var d=0;b>d;d+=1)this.cursor.push({x:2+2*d,y:CONFIG.hiddenRowCount});this.swapCount=0,this.groundSpeed=CONFIG.groundSpeedPerTic,this.baseGroundSpeed=CONFIG.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function GetIntBetween(a,b){"use strict";return Math.floor(Math.random()*(b-a+1))+a}Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}},Tetris.prototype.OneTick=function(a){"use strict";if(this.score+=this.grid.Evaluate(this.stats),this.HandleUserInput(a),this.tics+=1,0!==CONFIG.fallPeriod&&this.tics%CONFIG.fallPeriod===0&&this.RandomFall(),this.grid.Animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=CONFIG.groundAccelerationPerTic,this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic,this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox,this.grid.AddNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},Tetris.prototype.GetMaxFixed=function(){"use strict";return this.grid.GetMaxFixed()},Tetris.prototype.IsMoving=function(){"use strict";return this.grid.IsMoving()},Tetris.prototype.GetScore=function(){"use strict";return this.score},Tetris.prototype.GetSwaps=function(){"use strict";return this.swapCount},Tetris.prototype.RandomFall=function(){"use strict";for(var a=3,b=GetIntBetween(0,CONFIG.columnCount-a),c=b;b+a>c;c+=1)this.grid.NewBlockFall(c)},Tetris.prototype.HandleUserInput=function(a){"use strict";for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1),a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1)),a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1)),a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1)),a.pressed(this.keyBoardMappings[b].right)&&(c.x=Math.min(CONFIG.columnCount-2,c.x+1)),a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}};