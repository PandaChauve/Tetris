angular.module("angularApp.controllers").controller("GameCtrl",["$scope","$http","$route","$routeParams","$modal","$window","gameFactory","gameConstants","achievements","userStats",function(a,b,c,d,e,f,g,h,i,j){"use strict";a.gameName=d.name||"classic",a.confi={},a.game=null,a.confi.splitScreen="classicSplitScreen"===a.gameName,a.load=function(){b.get("games/"+a.gameName+".json",{cache:!1}).success(function(b){a.useGameConfig(b)}).error(function(a){console.log(a)})},a.load(),a.pause={toggle:function(){a.pause.active=a.game.togglePause()},active:!1},a.$on("$routeChangeStart",function(){a.game&&(a.game.stopGame(),a.game=null)}),a.reset=function(){var b=a.game;b.init(),b.stopGame(),a.game=g.newGame(a.game.config,a.game.grid,a.endCallBack)},angular.element(f).bind("blur",function(){return function(){a.game&&(a.pause.active=!0,a.game.togglePause(!0),a.$apply())}}()),a.useGameConfig=function(c){h.load(c.config),""==c.grid?a.game=g.newGame(c,"",a.endCallBack):b.get("grids/"+c.grid+".json",{cache:!1}).success(function(b){a.game=g.newGame(c,b,a.endCallBack)}).error(function(a){console.log(a)})},a.endCallBack=function(b){j.getCurrentGame().setTime(b.tics),j.getCurrentGame().setSwaps(b.tetris[0].swapCount),j.addGame(j.getCurrentGame(),a.gameName),i.check(j.getCurrentGame(),a.gameName),a.open()},a.open=function(){var b=e.open({animation:!0,templateUrl:"templates/modal.html",controller:"ModalInstanceCtrl",size:300,resolve:{gameName:function(){return a.gameName}}});b.result.then(function(){status&&a.game.config.next?(a.gameName=a.game.config.next,c.updateParams({name:a.gameName}),a.load()):a.reset()},function(){})}}]);