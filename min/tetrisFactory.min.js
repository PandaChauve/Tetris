angular.module("angularApp.factories").factory("tetrisFactory",["gameConstants","userInput","gridFactory",function(a,b,c){"use strict";function d(b,d){this.grid=c.newGrid(b),this.score=0,this.cursor=[],void 0===d&&(d=1);for(var e=0;d>e;e+=1)this.cursor.push({x:2+2*e,y:a.hiddenRowCount});this.swapCount=0,this.groundSpeed=a.groundSpeedPerTic,this.baseGroundSpeed=a.groundSpeedPerTic,this.groundPos=0,this.keyBoardMappings=[],this.tics=0}function e(a,b){return Math.floor(Math.random()*(b-a+1))+a}return d.prototype.oneTick=function(){if(this.score+=this.grid.evaluate(this.stats),this.handleUserInput(),this.tics+=1,0!==a.fallPeriod&&this.tics%a.fallPeriod===0&&this.randomFall(),this.grid.animate(),this.groundPos+=this.groundSpeed,this.groundSpeed+=a.groundAccelerationPerTic,this.baseGroundSpeed+=a.groundAccelerationPerTic,this.groundPos>=a.pixelPerBox){this.groundPos-=a.pixelPerBox,this.grid.addNewLine();for(var b=0;b<this.cursor.length;b+=1)this.cursor[b].y+=1;this.groundSpeed=this.baseGroundSpeed}},d.prototype.getMaxFixed=function(){return this.grid.getMaxFixed()},d.prototype.isMoving=function(){return this.grid.isMoving()},d.prototype.getScore=function(){return this.score},d.prototype.getSwaps=function(){return this.swapCount},d.prototype.randomFall=function(){for(var b=3,c=e(0,a.columnCount-b),d=c;c+b>d;d+=1)this.grid.newBlockFall(d)},d.prototype.handleUserInput=function(){for(var c=0;c<this.keyBoardMappings.length;c+=1){var d=this.cursor[c%this.cursor.length];b.pressed(this.keyBoardMappings[c].swap)&&this.grid.swap(d.x,d.y)&&(this.swapCount+=1),b.pressed(this.keyBoardMappings[c].down)&&(d.y=Math.max(a.hiddenRowCount,d.y-1)),b.pressed(this.keyBoardMappings[c].up)&&(d.y=Math.min(a.hiddenRowCount+a.displayedRowCount,d.y+1)),b.pressed(this.keyBoardMappings[c].left)&&(d.x=Math.max(0,d.x-1)),b.pressed(this.keyBoardMappings[c].right)&&(d.x=Math.min(a.columnCount-2,d.x+1)),b.pressed(this.keyBoardMappings[c].speed)&&(this.groundSpeed=a.groundUpSpeedPerTic)}},{newTetris:function(a,b,c){return new d(a,b,c)}}}]);