function Tetris(a,b,c){this.grid=new Grid(a);this.stats=c;this.score=0;this.cursor=[];void 0===b&&(b=1);for(a=0;a<b;a+=1)this.cursor.push({x:2+2*a,y:CONFIG.hiddenRowCount});this.swapCount=0;this.baseGroundSpeed=this.groundSpeed=CONFIG.groundSpeedPerTic;this.groundPos=0;this.keyBoardMappings=[];this.tics=0}
Tetris.prototype.OneTick=function(a){this.score+=this.grid.Evaluate(this.stats);this.HandleUserInput(a);this.tics+=1;0!==CONFIG.fallPeriod&&0===this.tics%CONFIG.fallPeriod&&this.RandomFall();this.grid.Animate();this.groundPos+=this.groundSpeed;this.groundSpeed+=CONFIG.groundAccelerationPerTic;this.baseGroundSpeed+=CONFIG.groundAccelerationPerTic;if(this.groundPos>=CONFIG.pixelPerBox){this.groundPos-=CONFIG.pixelPerBox;this.grid.AddNewLine();for(a=0;a<this.cursor.length;a+=1)this.cursor[a].y+=1;this.groundSpeed=
this.baseGroundSpeed}};Tetris.prototype.GetMaxFixed=function(){return this.grid.GetMaxFixed()};Tetris.prototype.IsMoving=function(){return this.grid.IsMoving()};Tetris.prototype.GetScore=function(){return this.score};Tetris.prototype.GetSwaps=function(){return this.swapCount};function GetIntBetween(a,b){return Math.floor(Math.random()*(b-a+1))+a}Tetris.prototype.RandomFall=function(){for(var a=GetIntBetween(0,CONFIG.columnCount-3),b=a;b<a+3;b+=1)this.grid.NewBlockFall(b)};
Tetris.prototype.HandleUserInput=function(a){for(var b=0;b<this.keyBoardMappings.length;b+=1){var c=this.cursor[b%this.cursor.length];a.pressed(this.keyBoardMappings[b].swap)&&this.grid.Swap(c.x,c.y)&&(this.swapCount+=1);a.pressed(this.keyBoardMappings[b].down)&&(c.y=Math.max(CONFIG.hiddenRowCount,c.y-1));a.pressed(this.keyBoardMappings[b].up)&&(c.y=Math.min(CONFIG.hiddenRowCount+CONFIG.displayedRowCount,c.y+1));a.pressed(this.keyBoardMappings[b].left)&&(c.x=Math.max(0,c.x-1));a.pressed(this.keyBoardMappings[b].right)&&
(c.x=Math.min(CONFIG.columnCount-2,c.x+1));a.pressed(this.keyBoardMappings[b].speed)&&(this.groundSpeed=CONFIG.groundUpSpeedPerTic)}};
